Index: src/Stage3/Stage3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.opencsv.CSVWriter;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.*;\n\n\n\n\npublic class Stage3 {\n    public static void main(String [] args) throws IOException {\n//        if (args.length != 1) {\n//            System.out.println(\"Usage: java Stage1 <configurationFile.txt>\");\n//            System.exit(-1);\n//        }\n        File file = new File(\"src/Stage3/configuration.txt\");\n        Scanner in = new Scanner(file);\n        //System.out.println(\"File: \" + args[0]);\n        Cloud cloud = new Cloud();\n        // reading <#_de_cortinas> <#_de_lámparas> <#_controles_cortinas> <#_controles_lámparas>\n        int numRollerShades = in.nextInt();\n        int numLamps = in.nextInt();\n        int numShadeControls = in.nextInt();\n        int numLampsControl = in.nextInt();\n        // read <alfa0> <length0> <canal0> … <alfaN_1> <lengthN_1> <canalN_1>\n        String alp;\n        String mL;\n        int shadeChannel = 0;\n        for (int i = 0; i<numRollerShades; i++){\n            alp = in.next();\n            double alpha = Double.parseDouble(alp);\n\n            mL = in.next();\n            double maxLength = Double.parseDouble(mL);\n\n\n            shadeChannel = in.nextInt();\n            RollerShade rollerShade = new RollerShade(shadeChannel, alpha, maxLength);\n            cloud.addRollerShade(rollerShade);\n        }\n        int lampChannel = 0;\n        for (int i=0; i<numLamps; i++) {             // channels lamparas\n            lampChannel = in.nextInt();\n            Lamp lamp = new Lamp(lampChannel);\n            cloud.addLamp(lamp);\n        }\n\n        int channelShadeControl = 0;\n        ArrayList<ShadeControl> shadesControlers = new ArrayList<ShadeControl>();\n        for (int i=0; i<numShadeControls; i++){                             //channels ctrl cortinas\n            channelShadeControl = in.nextInt();\n\n            ShadeControl shadeControl = new ShadeControl(channelShadeControl, cloud);\n            shadesControlers.add(shadeControl);\n        }\n\n        int channelLampControl = 0;\n        ArrayList<LampControl> lampsControlers = new ArrayList<LampControl>();\n        for (int i=0; i<numLampsControl; i++){                              //channels ctrl lamparas\n            channelLampControl = in.nextInt();\n\n            LampControl lampControl = new LampControl(channelLampControl, cloud);\n            lampsControlers.add(lampControl);\n        }\n\n        //OPERATOR\n        Operator operator = new Operator(shadesControlers, lampsControlers, cloud); //LO ESTOY ARREGLANDO\n\n\n        // Write CSV\n        File Out_stage2 = new File(\"src/Stage3/output.csv\");\n        FileWriter outputfile = new FileWriter(Out_stage2);\n        CSVWriter writer = new CSVWriter(outputfile);\n        operator.executeCommands(in, writer);\n        writer.close();                         // cierre del archivo escritura\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Stage3/Stage3.java b/src/Stage3/Stage3.java
--- a/src/Stage3/Stage3.java	(revision 00e9891ea93d6f3c3a72080d4fa4198c7cbd2b76)
+++ b/src/Stage3/Stage3.java	(date 1651247930496)
@@ -31,7 +31,8 @@
             double alpha = Double.parseDouble(alp);
 
             mL = in.next();
-            double maxLength = Double.parseDouble(mL);
+            double maxLength = Double.
+                    parseDouble(mL);
 
 
             shadeChannel = in.nextInt();
Index: Tarea_1.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src/Stage3\" isTestSource=\"false\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/src/Stage1\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/src/Stage2\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"opencsv-5.6\" level=\"project\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tarea_1.iml b/Tarea_1.iml
--- a/Tarea_1.iml	(revision 00e9891ea93d6f3c3a72080d4fa4198c7cbd2b76)
+++ b/Tarea_1.iml	(date 1651246186647)
@@ -6,6 +6,7 @@
       <sourceFolder url="file://$MODULE_DIR$/src/Stage3" isTestSource="false" />
       <excludeFolder url="file://$MODULE_DIR$/src/Stage1" />
       <excludeFolder url="file://$MODULE_DIR$/src/Stage2" />
+      <excludeFolder url="file://$MODULE_DIR$/src/Stage4" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"corretto-11\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 00e9891ea93d6f3c3a72080d4fa4198c7cbd2b76)
+++ b/.idea/misc.xml	(date 1651246247541)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="corretto-11" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
